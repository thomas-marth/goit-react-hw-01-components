{"version":3,"sources":["components/Stats/Stats.module.css","components/Profile/Profile.module.css","components/Statistics/Statistic.module.css","components/FriendListItem/FriendListItem.module.css","components/Transactions/Transactions.module.css","components/FriendsList/FriendList.module.css","components/Stats/Stats.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/Transactions/TransactionElement.jsx","components/Transactions/Transactions.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendsList/FriendList.jsx","components/App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","styles","statsList","statsItem","label","quantity","Profile","name","tag","location","avatar","stats","profile","description","src","alt","randomColor","max","Math","floor","random","Statistics","title","statistics","statList","map","item","style","backgroundColor","percentage","id","TransactionElement","type","amount","currency","propTypes","PropTypes","string","isRequired","Transactions","transactions","length","transactionHistory","FriendListItem","statusClassName","isOnline","online","offline","width","propTpes","bool","number","FriendList","friends","s","friendList","App","userData","statsData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,0B,iBCApID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,YAAc,6BAA6B,IAAM,qBAAqB,SAAW,4B,gBCApMD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,MAAQ,yBAAyB,SAAW,4BAA4B,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,gC,4PCAlND,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,QAAU,gCAAgC,OAAS,+BAA+B,KAAO,+B,0RCAvLD,EAAOC,QAAU,CAAC,mBAAqB,2C,gBCAvCD,EAAOC,QAAU,CAAC,WAAa,iC,6tFCqBhBC,EAlBD,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjC,OACE,qBAAIC,UAAWC,IAAOC,UAAtB,UACE,qBAAIF,UAAWC,IAAOE,UAAtB,UACE,sBAAMH,UAAWC,IAAOG,MAAxB,uBACA,sBAAMJ,UAAWC,IAAOI,SAAxB,SAAmCR,OAErC,qBAAIG,UAAWC,IAAOE,UAAtB,UACE,sBAAMH,UAAWC,IAAOG,MAAxB,mBACA,sBAAMJ,UAAWC,IAAOI,SAAxB,SAAmCP,OAErC,qBAAIE,UAAWC,IAAOE,UAAtB,UACE,sBAAMH,UAAWC,IAAOG,MAAxB,mBACA,sBAAMJ,UAAWC,IAAOI,SAAxB,SAAmCN,W,gBCc5BO,EA1BC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,sBAAKX,UAAWC,IAAOW,QAAvB,UACE,sBAAKZ,UAAWC,IAAOY,YAAvB,UACE,qBAAKC,IAAKJ,EAAQK,IAAI,gHAAsBf,UAAWC,IAAOS,SAC9D,mBAAGV,UAAWC,IAAOM,KAArB,SAA4BA,IAC5B,oBAAGP,UAAWC,IAAOO,IAArB,cAA4BA,KAC5B,mBAAGR,UAAWC,IAAOQ,SAArB,SAAgCA,OAElC,cAAC,EAAD,eAAWE,Q,gBC0BjB,SAASK,EAAYC,GACnB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAGhCI,MAxCf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,MAC3B,OACE,0BAASX,UAAWC,IAAOsB,WAA3B,UACGD,GAAS,oBAAItB,UAAWC,IAAOqB,MAAtB,SAA8BA,IAExC,oBAAItB,UAAWC,IAAOuB,SAAtB,SACGb,EAAMc,KAAI,SAAAC,GAAI,OACb,qBAEE1B,UAAWC,IAAOyB,KAClBC,MAAO,CACLC,gBAAgB,OAAD,OAASZ,EAAY,KAArB,YAA6BA,EAC1C,KADa,YAEVA,EAAY,KAFF,MAJnB,UASE,sBAAMhB,UAAWC,IAAOG,MAAxB,SAAgCsB,EAAKtB,QACrC,uBAAMJ,UAAWC,IAAO4B,WAAxB,UAAqCH,EAAKG,WAA1C,SATKH,EAAKI,a,gBCDPC,EATY,SAAC,GAAoC,IAAlCD,EAAiC,EAAjCA,GAAIE,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9C,OACE,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEJ,I,iBCkBbC,EAAmBI,UAAY,CAC7BH,KAAMI,IAAUC,OAAOC,WACvBL,OAAQG,IAAUC,OAAOC,WACzBJ,SAAUE,IAAUC,OAAOC,WAC3BR,GAAIM,IAAUC,OAAOC,YAGRC,MAxBM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OAA4B,IAAxBA,EAAaC,OAAqB,KAEpC,wBAAOzC,UAAWC,IAAOyC,mBAAzB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCAAQF,EAAaf,IAAIM,S,iCCbzBY,EAAiB,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,GAAIpB,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAC9BqC,EADmD,EAAfC,SACP5C,IAAO6C,OAAS7C,IAAO8C,QAC1D,OACE,qBAAa/C,UAAWC,IAAOyB,KAA/B,UACE,sBAAM1B,UAAW4C,IACjB,qBAAK5C,UAAU,SAASc,IAAKJ,EAAQK,IAAKR,EAAMyC,MAAM,OACtD,mBAAGhD,UAAU,OAAb,SAAqBO,MAHduB,IAQba,EAAeM,SAAW,CACxBvC,OAAQ0B,IAAUC,OAAOC,WACzB/B,KAAM6B,IAAUC,OAAOC,WACvBO,SAAUT,IAAUc,KAAKZ,WACzBR,GAAIM,IAAUe,OAAOb,YAGRK,QCXAS,EALI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAuB,IAAnBA,EAAQZ,OAAqB,KAC1B,oBAAIzC,UAAWsD,IAAEC,WAAjB,SAA8BF,EAAQ5B,IAAIkB,M,8BCsBpCa,EAlBH,WACV,OACE,qCACE,cAAC,EAAD,CACEjD,KAAMkD,EAASlD,KACfC,IAAKiD,EAASjD,IACdC,SAAUgD,EAAShD,SACnBC,OAAQ+C,EAAS/C,OACjBC,MAAO8C,EAAS9C,QAElB,cAAC,EAAD,CAAYW,MAAM,eAAeX,MAAO+C,IACxC,cAAC,EAAD,CAAY/C,MAAO+C,IACnB,cAAC,EAAD,CAAYL,QAASM,IACrB,cAAC,EAAD,CAAcnB,aAAcoB,QCpBlCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e3953a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"Stats_statsList__3iTKE\",\"statsItem\":\"Stats_statsItem__1ssJq\",\"label\":\"Stats_label__3BLxO\",\"quantity\":\"Stats_quantity__1Dsov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__226wo\",\"avatar\":\"Profile_avatar__1fNSM\",\"name\":\"Profile_name__Dce-1\",\"description\":\"Profile_description__1k5XM\",\"tag\":\"Profile_tag__1tfKr\",\"location\":\"Profile_location__3aBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__3VTws\",\"title\":\"Statistic_title__xMfHL\",\"statList\":\"Statistic_statList__1comz\",\"item\":\"Statistic_item__RTu0F\",\"label\":\"Statistic_label__3m8ua\",\"percentage\":\"Statistic_percentage__3ozX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2wHTH\",\"online\":\"FriendListItem_online__2Zfcu\",\"offline\":\"FriendListItem_offline__1WGKr\",\"avatar\":\"FriendListItem_avatar__3qz6z\",\"name\":\"FriendListItem_name__2TsJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__3o3cH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__29uh9\"};","import React from 'react';\r\n\r\nimport styles from './Stats.module.css';\r\n\r\nconst Stats = ({ followers, views, likes }) => {\r\n  return (\r\n    <ul className={styles.statsList}>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{views}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from '../Stats/Stats';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n      <Stats {...stats} />\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map(item => (\r\n          <li\r\n            key={item.id}\r\n            className={styles.item}\r\n            style={{\r\n              backgroundColor: `rgb(${randomColor(255)},${randomColor(\r\n                255,\r\n              )},${randomColor(255)})`,\r\n            }}\r\n          >\r\n            <span className={styles.label}>{item.label}</span>\r\n            <span className={styles.percentage}>{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nfunction randomColor(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst TransactionElement = ({ id, type, amount, currency }) => {\r\n  return (\r\n    <tr key={id}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\nexport default TransactionElement;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionElement from './TransactionElement';\r\nimport styles from './Transactions.module.css';\r\n\r\nconst Transactions = ({ transactions }) => {\r\n  if (transactions.length === 0) return null;\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{transactions.map(TransactionElement)}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionElement.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transactions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ id, avatar, name, isOnline }) => {\r\n  const statusClassName = isOnline ? styles.online : styles.offline;\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <span className={statusClassName}></span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTpes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\n\r\nimport s from './FriendList.module.css';\r\n\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  if (friends.length === 0) return null;\r\n  return <ul className={s.friendList}>{friends.map(FriendListItem)}</ul>;\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\n\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Transactions from './Transactions/Transactions';\r\nimport FriendList from './FriendsList/FriendList';\r\n\r\nimport userData from '../data/user.json';\r\nimport statsData from '../data/statistics.json';\r\nimport friendsData from '../data/friends.json';\r\nimport transactionData from '../data/transaction.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={userData.name}\r\n        tag={userData.tag}\r\n        location={userData.location}\r\n        avatar={userData.avatar}\r\n        stats={userData.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statsData} />\r\n      <Statistics stats={statsData} />\r\n      <FriendList friends={friendsData} />\r\n      <Transactions transactions={transactionData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}